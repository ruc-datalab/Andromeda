{"res": "To achieve the selection of rows with duplicated 'Horizon_SKU' values from a MySQL table, you can use the following SQL query:\n\n```sql\nSELECT *\nFROM your_table_name\nWHERE Horizon_SKU IN (\n    SELECT Horizon_SKU\n    FROM your_table_name\n    GROUP BY Horizon_SKU\n    HAVING COUNT(Horizon_SKU) > 1\n);\n```\n\nHowever, since you asked for database parameters specifically, here are some MySQL parameters that could be relevant to optimize such queries, especially if you are dealing with large datasets or require frequent execution of this type of query:\n\n1. `innodb_buffer_pool_size` - Increases the size of the buffer pool, where data and indexes are cached, improving overall database performance.\n2. `query_cache_size` - If enabled, sets the amount of memory allocated for caching query results. Note that the query cache is deprecated as of MySQL 5.7.20 and removed in MySQL 8.0.\n3. `tmp_table_size` and `max_heap_table_size` - Used to define the maximum size of internal in-memory temporary tables, which are used for complex queries, such as those involving GROUP BY operations.\n4. `innodb_lock_wait_timeout` - Useful for handling locking issues when multiple transactions are trying to access the same rows concurrently, which might be relevant in a high-concurrency environment.\n5. `innodb_log_file_size` - Determines the size of the log files in the log group of InnoDB, impacting recovery times and write performance.\n\nThese parameters can be adjusted in your MySQL configuration file (usually `my.cnf` or `my.ini`) to help optimize the performance of your database server for operations involving complex queries and large datasets."}