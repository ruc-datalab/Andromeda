{"res": "To address the query about forcing MySQL to use on-disk internal tables directly, rather than first attempting to create in-memory tables and then converting them to on-disk tables when they exceed memory limits, you can indeed manipulate the `tmp_table_size` and `max_heap_table_size` parameters. Setting `tmp_table_size` to a very low value, such as 0, would effectively force MySQL to skip the creation of in-memory temporary tables, as they would immediately exceed this limit. However, it's also important to adjust `max_heap_table_size` similarly because MySQL uses the smaller of these two values to determine when to convert an in-memory table to an on-disk table.\n\nAdditionally, you can specify the storage engine for on-disk temporary tables using the `internal_tmp_disk_storage_engine` parameter. This allows you to control which storage engine is used for these on-disk temporary tables, optimizing performance based on your specific workload or system characteristics.\n\nTherefore, the recommended parameters to address your query are:\n- `tmp_table_size`\n- `max_heap_table_size`\n- `internal_tmp_disk_storage_engine`\n\nThese parameters allow you to directly influence the behavior of temporary table storage, ensuring that MySQL uses on-disk tables from the start of query execution when necessary.\n\nOutputting the list as requested:\n```json\n['tmp_table_size', 'max_heap_table_size', 'internal_tmp_disk_storage_engine']\n```"}