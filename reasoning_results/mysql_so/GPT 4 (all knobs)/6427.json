{"res": "The issue you're encountering with the `GROUP_CONCAT()` function affecting the number of rows returned in your query is likely not directly related to the `GROUP_CONCAT_MAX_LEN` parameter, as you correctly noted that the length of the concatenated `id` values does not exceed this limit. Instead, the behavior you're observing can be influenced by how MySQL handles text comparison and grouping, especially with large text fields and different collations or character sets.\n\nHere are some relevant parameters and considerations that might affect the behavior of your query:\n\n1. **`collation_connection`**: This parameter determines the collation of the connection, which affects string comparison. Differences in collation settings can lead to unexpected behavior in `GROUP BY` operations, particularly with text fields.\n\n2. **`character_set_connection`**: This setting affects the character set used for data sent to the server. Mismatches or changes in character set handling could influence how text comparisons are performed during grouping.\n\n3. **`group_concat_max_len`**: Although you've ruled this out, it's good to confirm that this setting is sufficiently large, as it defines the maximum length of the result of `GROUP_CONCAT()`. If the result exceeds this length, it will be truncated, which isn't the issue here but is good to keep in mind.\n\n4. **`sort_buffer_size`**: This parameter affects the amount of memory allocated for sorting, which includes grouping operations. Insufficient buffer size might affect the efficiency or correctness of sorting and grouping large text fields.\n\n5. **`max_heap_table_size`**: This setting influences the maximum size of user-created memory tables, which can be involved when performing operations like `GROUP BY`.\n\n6. **`tmp_table_size`**: Similar to `max_heap_table_size`, this parameter sets the maximum size of internal temporary tables that MySQL can create automatically during query processing, such as when executing `GROUP BY`.\n\nGiven your scenario, it's advisable to check and possibly adjust the `collation_connection` and `character_set_connection` settings to ensure consistent behavior in text handling and comparisons. This is particularly relevant if the text fields have subtle differences not easily noticeable but affecting grouping behavior when functions like `GROUP_CONCAT()` are used.\n\nOutputting the list as requested:\n\n```json\n[\n  \"collation_connection\",\n  \"character_set_connection\",\n  \"group_concat_max_len\",\n  \"sort_buffer_size\",\n  \"max_heap_table_size\",\n  \"tmp_table_size\"\n]\n```"}