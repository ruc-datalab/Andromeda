{"res": "To address the scenario where internal tables created by a query can't fit into the available memory, and you want to force MySQL to use on-disk internal tables to avoid in-memory creations and subsequent HEAP to DISK conversions, setting `tmp_table_size` to 0 is not the recommended approach. Instead, you should consider adjusting the following parameters:\n\n1. `tmp_table_size`: This parameter specifies the maximum size of internal in-memory temporary tables. However, setting it to 0 is not practical as it would not allow any in-memory temporary tables, which could severely degrade performance for operations that could benefit from in-memory processing.\n\n2. `max_heap_table_size`: This parameter sets the maximum size to which user-created MEMORY tables are allowed to grow. The value of this variable is also used to limit the size of internal in-memory tables.\n\nBy setting both `tmp_table_size` and `max_heap_table_size` to a low value (not necessarily 0), MySQL will be more inclined to use on-disk temporary tables when the internal temporary table exceeds these limits. This approach avoids the overhead of initially creating a table in memory and then converting it to an on-disk table when it grows too large.\n\nTherefore, the recommended parameters to adjust are:\n\n```json\n[\"tmp_table_size\", \"max_heap_table_size\"]\n```"}