{"res": "Based on your description and the issue you're encountering with MySQL 5.5 where queries with execution times far below the `long_query_time` threshold are being logged in the slow query log, it seems that the `log-queries-not-using-indexes` parameter might be influencing this behavior. This parameter causes queries that do not use indexes to be logged regardless of their execution time. Here are the relevant parameters to consider:\n\n1. **long_query_time** - This parameter defines the threshold for what is considered a \"slow\" query. You have it set to 10 seconds, which means any query that takes longer than this should be logged as slow.\n\n2. **log_slow_queries** - This is the directive to enable slow query logging and specify the log file location. It's correctly set to log to `/var/log/mysql/mysql-slow.log`.\n\n3. **log-queries-not-using-indexes** - This parameter causes MySQL to log queries that do not use indexes, even if they do not exceed the `long_query_time`. This is likely why you are seeing queries with very short execution times in your slow query log.\n\nTo address your issue, you might consider adjusting or temporarily disabling the `log-queries-not-using-indexes` parameter to confirm if it's responsible for the unexpected entries in your slow query log. If you find that these entries are no longer logged when this parameter is disabled, and that's the desired behavior, you might choose to keep it disabled or adjust your indexing strategy to ensure more queries use indexes.\n\nHere's the list of parameters based on your scenario:\n\n```json\n[\"long_query_time\", \"log_slow_queries\", \"log-queries-not-using-indexes\"]\n```"}