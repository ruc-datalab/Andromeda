{"res": "Based on the scenario described where increasing concurrency leads to a significant increase in execution time and many queries being blocked, it suggests that there might be contention or insufficient resources allocated to handle the increased load effectively. Here are some parameters that could potentially help improve the performance and manage the higher concurrency levels:\n\n1. **`thread_cache_size`**: This parameter determines how many threads the server should cache for reuse. When not set high enough, thread creation and destruction can become costly in highly concurrent environments.\n\n2. **`max_connections`**: Although you mentioned that there were no issues found with this setting, it's crucial to ensure that it is set high enough to handle the increased number of concurrent connections without hitting the limit.\n\n3. **`innodb_buffer_pool_size`**: This parameter is critical for performance in InnoDB, as it defines the size of the memory buffer InnoDB uses to cache data and indexes of its tables. Increasing this value can reduce disk I/O by caching more data.\n\n4. **`innodb_log_file_size`**: A larger log file size can handle more data changes before needing to flush to disk, which can be beneficial under high concurrency and heavy write loads.\n\n5. **`innodb_thread_concurrency`**: This parameter can be used to limit the number of threads that can enter InnoDB concurrently. Setting it to 0 allows an unlimited number of threads, which might not always be optimal. Adjusting this parameter might help manage concurrency better.\n\n6. **`innodb_io_capacity`** and **`innodb_io_capacity_max`**: These parameters specify the I/O capacity of the storage system, which can help InnoDB pace its background I/O (like flushing dirty pages from the buffer pool) according to the actual capacity of the underlying storage.\n\n7. **`query_cache_size`** (if applicable, as it's deprecated in MySQL 8.0): If your workload benefits from query caching and you are using a version of MySQL that still supports it, adjusting the query cache size might help. However, this often does not benefit highly dynamic and write-heavy workloads.\n\nGiven the symptoms of blocked queries and increased execution time with higher concurrency, focusing on parameters that enhance the handling of concurrency and I/O operations would be beneficial. Here's the recommended list of parameters based on your scenario:\n\n```json\n[\"thread_cache_size\", \"max_connections\", \"innodb_buffer_pool_size\", \"innodb_log_file_size\", \"innodb_thread_concurrency\", \"innodb_io_capacity\", \"innodb_io_capacity_max\"]\n```"}