{"res": "Based on the scenario described, where the restoration of a large PostgreSQL database is slow, and considering the system resource utilization and the PostgreSQL configuration parameters you've already adjusted, here are some recommended parameters to potentially improve the restoration speed:\n\n1. **`maintenance_work_mem`** - You've set this to 2GB, which is generally good for maintenance operations like restoring a database, but you might consider increasing it if your system has more available RAM.\n\n2. **`wal_buffers`** - Setting this to `-1` uses the default setting, which might be too low for a large restore operation. Consider setting this to a higher fixed value, such as 16MB, to improve WAL writing performance.\n\n3. **`checkpoint_timeout`** - Increasing this parameter can reduce the frequency of checkpoints, which can improve performance during bulk operations like a database restore.\n\n4. **`checkpoint_completion_target`** - Setting this to a higher value allows more time for PostgreSQL to spread out the I/O related to writing checkpoints, which can reduce the I/O load during the restore.\n\n5. **`max_wal_size`** - Increasing this parameter allows more WAL to accumulate before a checkpoint is forced, which can be beneficial during large data loads.\n\n6. **`synchronous_commit`** - Setting this to `off` during the restore process can improve performance by reducing the wait time for WAL flushes to disk.\n\n7. **`fsync`** - Temporarily turning off `fsync` can significantly speed up the restore process, but it should be used with caution as it can risk data loss in the event of a system crash.\n\n8. **`effective_io_concurrency`** - If your disk supports asynchronous I/O, increasing this value can help better utilize its capabilities.\n\n9. **`wal_level`** - Setting this to `minimal` during the restore can reduce the amount of information written to the WAL, which is not necessary for a restore operation.\n\n10. **`wal_compression`** - If `wal_level` is not set to minimal and WAL size is a concern, enabling WAL compression can help reduce the size of the WAL files generated.\n\nThese parameters are specifically chosen to address the performance issues during a large database restore operation by optimizing the use of system resources and reducing the I/O overhead. After the restore is complete, remember to revert these settings to their original values to ensure the normal operational integrity and durability of your database."}