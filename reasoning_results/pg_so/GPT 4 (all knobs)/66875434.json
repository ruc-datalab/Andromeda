{"res": "To address your request for simplifying the conversion of SELECT/table results to a JSONB/text format in PostgreSQL without repeating the `COALESCE(jsonb_agg(tmp)::text, '[]') FROM (...) as tmp` pattern, you can create a custom function. This function will encapsulate the logic for converting the result set to JSONB and then to text, thus avoiding repetition in your queries.\n\nHere\u2019s how you can create such a function:\n\n1. **Create a SQL function** that takes a query as an argument and returns the JSONB representation of the query results as text. This function will internally use `jsonb_agg` to aggregate the results and `COALESCE` to handle empty results.\n\nHere is an example of how you might define this function:\n\n```sql\nCREATE OR REPLACE FUNCTION my_to_json_string(query refcursor)\nRETURNS text AS $$\nDECLARE\n    result text;\nBEGIN\n    FETCH ALL FROM query INTO result;\n    RETURN COALESCE(jsonb_agg(result)::text, '[]');\nEND;\n$$ LANGUAGE plpgsql;\n```\n\n2. **Use the function in your queries** to simplify the conversion process:\n\n```sql\nBEGIN;\nDECLARE my_cursor refcursor;\nOPEN my_cursor FOR SELECT id, balance FROM student LIMIT 5;\nSELECT my_to_json_string(my_cursor);\nCOMMIT;\n```\n\nThis approach encapsulates the JSON conversion logic within a function, simplifying your SQL queries and making your code cleaner and more maintainable.\n\nHowever, please note that the function and usage example provided above are conceptual and might need adjustments based on your specific PostgreSQL setup and version.\n\nRegarding the parameters you asked to select from the list, none of the parameters directly influence the creation or execution of a function like this in PostgreSQL. The function and its usage are primarily dependent on PostgreSQL's PL/pgSQL language capabilities and do not require specific configuration changes through parameters. Therefore, the response to your query does not involve selecting from the provided list of database parameters."}